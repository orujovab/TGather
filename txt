import re
text = input()
pattern = re.compile("\w{4,}")
result = pattern.findall(text)
for word in result:
    print(word)
print("The number of words consisting of 4 and more letters:",len(result))




import re
text = input("Enter the number in the format (380) xxx-xxx-xx:")
pattern = re.compile("(\(380\)) (\d{3})-(\d{2})-(\d{2})")
result = pattern.match(text)
if result:
    print("Correct number.")
else:
    print("Invalid format.")        
    
    
    
    
    
    
    
import re
text = input()
text_split = text.split()
pattern = re.compile('[aeiouAEIOU]\w+')
for word in text_split:
    if pattern.match(word):
        print(word)
        
        
        
        
        
text = ['83.168.9.216 18/01/2022 07:05:04 200','13.129.9.6 18/01/2022 07:05:05 200','93.149.9.2 18/01/2022 07:06:04 200','113.149.9.223 18/01/2022 07:06:20 404','99.149.9.216 18/01/2022 07:06:44 200','83.149.9.216 18/01/2022 07:10:04 200','83.149.9.216 18/01/2022 07:12:00 200','113.149.9.216 18/01/2022 07:13:07 200','83.149.9.2 18/01/2022 07:13:20 200','83.149.9.216 18/01/2022 07:13:33 404','83.149.9.216 18/01/2022 07:13:47 200','83.144.9.6 18/01/2022 07:13:59 200','122.2.2.2 18/01/2022 07:16:44 404','100.143.9.2 18/01/2022 07:17:44 404','22.13.9.216 18/01/2022 07:18:44 404','127.173.7.217 18/01/2022 07:19:44 404','12.43.9.26 18/01/2022 07:20:44 404']
import re
pattern = re.compile("(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}) ([1-9]|1\d|2[0-8])/(0[1-9]|1[0-2])/(19|20)\d\d ((0\d|1\d|2[0-3]):([0-5]\d):([0-5]\d)) (\d{3})")
for text_str in text:
    match = pattern.match(text_str)
    if match.group(9) == '404':
        print('User ip:',match.group(1))
        
        
        
        
        
        
        
import re 
text=input()
pattern = re.compile("(https|http)://(www\.)?([a-zA-Z0-9@:%\._\\\+~#\?&//=]{2,256})\.([a-z]{2,6})")
result=pattern.findall(text)
if result:
    for url in result:
        if list(url)[3]=='com':
            print(list(url)[2])
        else:
            print("The address does not belong to the 'com' domain.")
else:
    print("Wrong address structure.")
    
    
 
 
 
 
 
 import re
ip_text = input("Enter a IP-address:")
pattern = re.compile("(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})")
ip = pattern.match(ip_text)
if int(ip.group(1))== 192 and int(ip.group(2))==168 and int(ip.group(3))==1 and int(ip.group(4))<=255 and int(ip.group(4))>=1:
    print("IP is valid.")
else:
    print("Address does not exist on the network.")
    
    
    
    




import re
password_text = input("Enter a password")
patterns = {'high': ['[0-9]', '[!@#$%^&*]', '[a-z]', '[A-Z]'],
            'medium': ['[0-9]', '[a-z]', '[A-Z]'],
            'low': ['[0-9]', '[a-z]']}
 
status = 'invalid'
for item in patterns:
    check = 0
    for pattern in patterns[item]:
        re_pattern = re.compile(pattern)
        if len(re_pattern.findall(password_text)) > 0:
            check += 1
    if check == len(patterns[item]):
        status = item
        break        
if len(password_text) < 8:
    status = 'invalid'
 
statuses = {'high': 'The password security level is high.',
            'medium': 'The password security level is medium.',
            'low': 'The password security level is low.',
            'invalid': 'Password invalid!'}
print(statuses[status])










import re
text = input()
pattern = re.compile("(([0-9a-fA-F]{2})([:-]|$)){6}($|([0-9a-fA-F]{4}))")
 
match = pattern.match(text)
if match:
    print(text+": mac-address is valid.")
else:
    print(text+": mac-address is invalid.")
    
    
    
    
  
  
import re
data_text = input("Enter date and time in the format DD.MM.YYYY HH:MI:SS")
pattern = re.compile("(0[1-9]|1\d|2[0-8])\.(0[1-9]|1[0-2])\.((19|20)\d\d) ((0\d|1\d|2[0-3]):[0-5]\d:[0-5]\d)")
data = pattern.match(data_text)
if data:
    print("Date is valid.")
else:
    print("Data invalid!")
    
    
    
    
    
    
    
    
